# Fast edits {{{

function ebi() { vim ~/.bashrc_ion; }
function ek() { vim /cygdrive/c/Users/mlandi/Google\ Drive/personal/KeyMappings.ahk; }

# }}}
# Awk {{{

function delta() {
    awk -f ~/h/Google\ Drive/personal/delta.awk
}

mq_slowness() {
    awk -f ~/h/Google\ Drive/personal/mq_slowness.awk
}

split_runs() {
    awk -f ~/h/Google\ Drive/personal/split_runs.awk
}

# }}}

function b1i() { ~/opt/bunny1/venv/bin/python ~/opt/bunny1/b1_ion.py --test "$*"; }
function cm() { cygstart "C:\Program Files\CommitMonitor\CommitMonitor.exe"; }
# ConnectION {{{

function conn_api() {
    local _host=${1:-http://pimatlanw01.iontrading.com:3000}
    local _url=${2:-/api/employees/me}
    local _method=${3:-GET}
    local _data=${4:-}
    local _access_token=${5:-}

    gimmeurjson \
        "${_host}${_url}" \
        "${_method}" \
        "${_data}" \
        --header "x-connection-authorization: Bearer ${_access_token}" \
        "${@:6}"
}

function conn_api_i() {
    local _host
    local _url
    local _method
    local _data
    local _access_token
    read -p "host [${GREEN}${_CONNECTION_HOST:-http://pimatlanw01.iontrading.com:3000}${D}]: " _host
    read -p "url [${PINK}${_CONNECTION_URL:-/api/employees/me}${D}]: " _url
    read -p "method [${ORANGE}${_CONNECTION_METHOD:-GET}${D}]: " _method
    read -p "data [${CYAN}${_CONNECTION_DATA:-{}}${D}]: " _data
    read -p "access_token [${_CONNECTION_ACCESS_TOKEN:-}]: " _access_token

    export _CONNECTION_HOST=${_host:-${_CONNECTION_HOST}}
    export _CONNECTION_URL=${_url:-${_CONNECTION_URL}}
    export _CONNECTION_METHOD=${_method:-${_CONNECTION_METHOD}}
    export _CONNECTION_DATA=${_data:-${_CONNECTION_DATA}}
    export _CONNECTION_ACCESS_TOKEN=${_access_token:-${_CONNECTION_ACCESS_TOKEN}}

    echo
    echo "connection '${GREEN}${_CONNECTION_HOST}${D}' '${PINK}${_CONNECTION_URL}${D}' '${ORANGE}${_CONNECTION_METHOD}${D}' '${CYAN}${_CONNECTION_DATA}${D}' '${CYAN}${_CONNECTION_ACCESS_TOKEN}${D}'" "$@"

    conn_api \
        "${_CONNECTION_HOST}" \
        "${_CONNECTION_URL}" \
        "${_CONNECTION_METHOD}" \
        "${_CONNECTION_DATA}" \
        "${_CONNECTION_ACCESS_TOKEN}" \
        "${@}"
}

function conn_feature_add_i() {
    local _host
    local _access_token
    local _feature

    read -p "host [${GREEN}${_CONNECTION_HOST:-http://pimatlanw01.iontrading.com:3000}${D}]: " _host
    read -p "access_token [${_CONNECTION_ACCESS_TOKEN:-}]: " _access_token
    read -p "feature [${_CONNECTION_FEATURE:-}]: " _feature

    export _CONNECTION_HOST=${_host:-${_CONNECTION_HOST}}
    export _CONNECTION_ACCESS_TOKEN=${_access_token:-${_CONNECTION_ACCESS_TOKEN}}
    export _CONNECTION_FEATURE=${_feature:-${_CONNECTION_FEATURE}}
    export _CONNECTION_URL=/api/experimental-features/feature/${_CONNECTION_FEATURE}
    export _CONNECTION_METHOD=POST
    export _CONNECTION_DATA=

    echo "connection '${GREEN}${_CONNECTION_HOST}${D}' '${PINK}${_CONNECTION_URL}${D}' '${ORANGE}${_CONNECTION_METHOD}${D}' '${CYAN}${_CONNECTION_DATA}${D}' '${CYAN}${_CONNECTION_ACCESS_TOKEN}${D}'" "$@"
    conn_api \
        "${_CONNECTION_HOST}" \
        "${_CONNECTION_URL}" \
        "${_CONNECTION_METHOD}" \
        "${_CONNECTION_DATA}" \
        "${_CONNECTION_ACCESS_TOKEN}"
}

function conn_feature_toggle_i() {
    local _host
    local _access_token
    local _feature

    read -p "host [${GREEN}${_CONNECTION_HOST:-http://pimatlanw01.iontrading.com:3000}${D}]: " _host
    read -p "access_token [${_CONNECTION_ACCESS_TOKEN:-}]: " _access_token
    read -p "feature [${_CONNECTION_FEATURE:-}]: " _feature

    export _CONNECTION_HOST=${_host:-${_CONNECTION_HOST}}
    export _CONNECTION_ACCESS_TOKEN=${_access_token:-${_CONNECTION_ACCESS_TOKEN}}
    export _CONNECTION_FEATURE=${_feature:-${_CONNECTION_FEATURE}}

    while read -r _connection_id; do
        export _CONNECTION_CONNECTIONID=${_connection_id}
        export _CONNECTION_URL=/api/experimental-features/feature/${_CONNECTION_FEATURE}/${_CONNECTION_CONNECTIONID}
        export _CONNECTION_METHOD=POST
        export _CONNECTION_DATA=

        echo "connection '${GREEN}${_CONNECTION_HOST}${D}' '${PINK}${_CONNECTION_URL}${D}' '${ORANGE}${_CONNECTION_METHOD}${D}' '${CYAN}${_CONNECTION_DATA}${D}' '${CYAN}${_CONNECTION_ACCESS_TOKEN}${D}'" "$@"
        conn_api \
            "${_CONNECTION_HOST}" \
            "${_CONNECTION_URL}" \
            "${_CONNECTION_METHOD}" \
            "${_CONNECTION_DATA}" \
            "${_CONNECTION_ACCESS_TOKEN}"
    done
}

# }}}

function cts_reconfigure() {
    (true && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms-deploy && \
        rsync -av src/test/resources/cts.init ion@lilith.fssnet.internal:PLATFORM_LILITH/DM_LILITH_OMS_STATIC/wrk/CTS_OMS_CI && \
        ssh ion@lilith.fssnet.internal "psg cts | cuts -f1 | xargs kill && exit 0")
}
function cyg_get() { cyg_setup -q -P "$1"; }
function cyg_setup() { cygstart 'C:\Users\mlandi\Downloads\setup-x86_64.exe' "$@"; }
function d() {
    if [ x"$1" == x"isearch" ]; then
        curl -X GET http://10.100.80.48:5000/v2/_catalog 2> /dev/null | json_pp | hl "${@:2}"
    else
        sudo docker "$@"
    fi
}
function gce() { gc '(	at |xception|ERROR)' "$@"; }
function fetchdocs() { m live-documentation-fetcher:fetch -DtestCasesDirectorySplit=$0; }
function fuck_cmd() {
    cmd /c start "$@"
}
function last_log() { $(which ls) -t /cygdrive/c/Users/mlandi/workspace/xoms-git/$1/LOGS/OMS* | hn 1; }
function last_log_mmi() { $(which ls) -t /cygdrive/c/Users/mlandi/AppData/Roaming/ION\ Trading/MMI.NET/lilith_20000/Workspaces/lilith_20000_mlandi/LOGS/MMI.NET* | hn 1; }
function last_run() { tail_from_start $(last_log $1); }
function last_run_mmi() { tail_from_start $(last_log_mmi); }
function lr { last_run "$@"; }
function mmi() {
    ~/workspace/oms.net/output/mmi.exe \
        -themes=true -EnabledThemesDemoLevelBase \
        "$@"
}
function mmi_trader() {
    mmi \
        -auth=secure -pwd=mlandi -user=mlandi \
        -env=lilith_20000 -workspace=lilith_20000_mlandi
}
function mmi_sales() {
    mmi \
        -auth=secure -pwd=mlandi -user=mlandi_sales \
        -env=lilith_20000_sales -workspace=lilith_20000_mlandi_sales
}
function omsparents() {
    (true && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms-parent && \
            m clean install && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms-parent-tests && \
            m clean install)
}
function omscodegen() {
    (true && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms-common && \
            m clean codegen:codegen install && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms_wm && \
            m clean dependency:unpack-dependencies@unpack-codegen codegen:codegen)
}
function omsinstall() {
    (true && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms-common && \
            m -DskipTests install && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms_capture && \
            m -DskipTests install && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms_ext_exec_mock && \
            m -DskipTests install && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms_rs && \
            m -DskipTests install && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms_wm && \
            m -DskipTests install && \
        true)
}
function omstest() {
    (true && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms-common && \
            m surefire:test && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms_capture && \
            m surefire:test && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms_ext_exec_mock && \
            m surefire:test && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms_rs && \
            m surefire:test && \
        cd /cygdrive/c/Users/mlandi/workspace/xoms-git/oms_wm && \
            m surefire:test && \
        true)
}

# QST {{{

function qst() {
    local _host=${1:-http://pisa092.iontrading.com:20999}
    local _url=${2:-/}
    local _method=${3:-GET}
    local _data=${4:-{}}

    gimmeurjson \
        "${_host}/${_url}" \
        "${_method}" \
        "${_data}" \
        "${@:5}"
}

function qsti() {
    local _host
    local _url
    local _method
    local _data
    read -p "host [${GREEN}${_QST_HOST:-http://pisa092.iontrading.com:20999}${D}]: " _host
    read -p "url [${PINK}${_QST_URL:-/}${D}]: " _url
    read -p "method [${ORANGE}${_QST_METHOD:-GET}${D}]: " _method
    read -p "data [${CYAN}${_QST_DATA:-{}}${D}]: " _data

    export _QST_HOST=${_host:-${_QST_HOST}}
    export _QST_URL=${_url:-${_QST_URL}}
    export _QST_METHOD=${_method:-${_QST_METHOD}}
    export _QST_DATA=${_data:-${_QST_DATA}}

    echo
    echo "qst '${GREEN}${_QST_HOST}${D}' '${PINK}${_QST_URL}${D}' '${ORANGE}${_QST_METHOD}${D}' '${CYAN}${_QST_DATA}${D}'" "$@"

    qst \
        "${_QST_HOST}" \
        "${_QST_URL}" \
        "${_QST_METHOD}" \
        "${_QST_DATA}" \
        "${@:5}"
}

# }}}
# Robotframework {{{

function rf() {
    local _test=${1:-*}
    local _suite=${2:-stuff}
    local _split=${3:-stuff}
    local _platform=${4:-local_mlandi}

    _JAVA_OPTIONS="$_JAVA_OPTIONS -Djava.awt.headless=false" \
        m \
        integration-test \
        -Dtest.name="$_test" \
        -Dsuite.test="$_suite" \
        -DtestCasesDirectorySplit="$_split" \
        -Denv.platform="$_platform" \
        -Dwebdriver.chrome.driver="src\test\chromedriver.exe" \
        -Dwebdriver.firefox.bin="C:\Program Files (x86)\Mozilla Firefox ESR\firefox.exe" \
        -Dwebdriver.ie.bin="C:\Program Files\Internet Explorer\iexplore.exe" \
        -Djenkins.workspace=../ \
        "${@:5}"
    rfglog
    rflog
}
function rfcb() {
    cb | J | cb
}
function rfi() {
    local _test
    local _suite
    local _split
    local _platform
    read -p "test [${GREEN}${_RFI_TEST:-*}${D}]: " _test
    read -p "suite [${PINK}${_RFI_SUITE:-stuff}${D}]: " _suite
    read -p "split [${ORANGE}${_RFI_SPLIT:-stuff}${D}]: " _split
    read -p "platform [${CYAN}${_RFI_PLATFORM:-local_mlandi}${D}]: " _platform

    export _RFI_TEST=${_test:-${_RFI_TEST}}
    export _RFI_SUITE=${_suite:-${_RFI_SUITE}}
    export _RFI_SPLIT=${_split:-${_RFI_SPLIT}}
    export _RFI_PLATFORM=${_platform:-${_RFI_PLATFORM}}

    echo
    echo "rf '${GREEN}${_RFI_TEST:-*}${D}' '${PINK}${_RFI_SUITE}${D}' '${ORANGE}${_RFI_SPLIT}${D}' '${CYAN}${_RFI_PLATFORM}${D}'" "$@"

    rf "${_RFI_TEST}" "${_RFI_SUITE}" "${_RFI_SPLIT}" "${_RFI_PLATFORM}" "$@"
}
function rfglog() {
    rebot.bat \
        --noncritical unstable \
        --report NONE \
        --outputdir $(cygpath -w target/robotframework-reports) \
        $(cygpath -w target/robotframework-reports/output.xml)
}
function rflog() { cygstart $(cygpath -a target/robotframework-reports/log.html); }

# }}}
function ride() {
    cygstart "C:\Python27\pythonw.exe" -c "from robotide import main; main()";
}
# Scum {{{

_scum=$(which scum)
function scum() {
    "${_scum}" "$@" | \
        sed --unbuffered \
            -e "s/Warning: \(.*\)/$ORANGE\1$D/g" \
            -e "s/Error: \(.*\)/$RED\1$D/g"
}

# }}}
function sysadmin() {
    cygstart \
        "C:\Program Files\ION Trading\System Administrator 227p6d2 (64-bit)\SystemAdministrator.exe" \
        "$@"
}
function sysadmin_lilith() {
    sysadmin \
        -auth=secure -pwd=mlandi -user=mlandi \
        -env=lilith_20000 -workspace=lilith_20000_mkv
}
function sysadmin_qsearch() {
    sysadmin \
        -auth=secure -pwd=qSe@rch123 -user=qsearch \
        -env=qsearch.iontrading.com -workspace=lilith_20000_mkv
}
function sysadmin_pimatlanw01() {
    sysadmin \
        -auth=secure -pwd=mkvpwd -user=mkv \
        -env=pimatlanw01 -workspace=pimatlanw01_mkv
}
function tail_from_start() { tail_from 'Application {INFO} Action {START}' "$@"; }
# Components {{{

function router() {
    (
    cd /cygdrive/c/Users/mlandi/opt/router_m106p4;
    ./mkvrouter_m106p4.sh
    )
}
function webserver() {
    (
    cd /cygdrive/c/Users/mlandi/opt/ION_WEB_SERVER117/bin;
    ./IonWebServer.bat;
    )
}
function webstreaming() {
    (
    cd /cygdrive/c/Users/mlandi/opt/ION_WEB_STREAMING103/bin;
    ./IonWebStreamingServer.bat
    )
}

# }}}
# Hosts {{{

# Connection {{{ 

    cn() {
        echo_n_run ssh-red mlandi@cpuk1ionhurap01.iontrading.com
    }
    cndb() {
        echo_n_run ssh-red mlandi@cpuk1ionhurdb01.iontrading.com
    }
    cnuat() {
        echo_n_run ssh-green mlandi@cuuk1ionhurap01.iontrading.com
    }
    cnuatdb() {
        echo_n_run ssh-green mlandi@cuuk1ionhurdb01.iontrading.com
    }
    cnint() {
        echo_n_run ssh-blue mlandi@cpuk1ionhurap02.iontrading.com
    }
    cnintdb() {
        echo_n_run ssh-blue mlandi@cpuk1ionhurdb02.iontrading.com
    }
    jk() {
        echo_n_run ssh-purple IONTRADING\\mlandi@10.101.2.196
    }

# }}}
# QST {{{

qst_prod() {
    s mlandi@cpuk1ionqstap01.iontrading.com
}

# }}}
# OMS {{{

lndct01() { s ion@lnd-ct-01.iontrading.com; }
axton() { s ion@axton.fssnet.internal "cd jenkins-axton/jobs"; }
coral() { s ion@coral.fssnet.internal; }
lilith() { s ion@lilith.fssnet.internal "cd PLATFORM_LILITH"; }

# }}}

ipse() {
    sshs app-dev@lnd-ipse-dev-03.iontrading.com \
        -t "cd /opt/ion/DEVPlatform; bash --login"
}

dmondra() {
    sshs ion@ondra.iontrading.com \
        -t "cd /export/saltest/test/21000; bash --login"
}

dsondra() {
    sshs ion@ondra.iontrading.com \
        -t "cd /export/saltest/test/20000; bash --login"
}

delhiqa() {
    sshs delhi_qa@192.168.46.176 \
        -t "cd BIMI_FX; bash --login"
}

pimatlanw01() {
    echo_n_run ssh -R 5556:localhost:5556 mlandi@PIMATLANW01.iontrading.com
}
pimatlanw01linux() {
    echo_n_run ssh -R 5556:localhost:5556 -p 10022 vagrant@PIMATLANW01.iontrading.com
}

# }}}

export PATH="/usr/sbin:$PATH"
export PATH="${HOME}/h/AppData/Roaming/npm:$PATH"

export PATH="/home/mlandi/perl5/bin${PATH+:}${PATH}"; export PATH;
export PERL5LIB="/home/mlandi/perl5/lib/perl5${PERL5LIB+:}${PERL5LIB}"; export PERL5LIB;
export PERL_LOCAL_LIB_ROOT="/home/mlandi/perl5${PERL_LOCAL_LIB_ROOT+:}${PERL_LOCAL_LIB_ROOT}"; export PERL_LOCAL_LIB_ROOT;
export PERL_MB_OPT="--install_base \"/home/mlandi/perl5\""; export PERL_MB_OPT;
export PERL_MM_OPT="INSTALL_BASE=/home/mlandi/perl5"; export PERL_MM_OPT;

# disable remote-control-system related stuff
# export PROMPT_NO_RCS=true
